@page "/legalworkerstats"

@using WorkerStats.Data
@inject WorkerStatsService WorkerStatsService
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager

@if (workerStats == null)
{
    <p><em>Loading...</em></p>
}
else
{
<div class="container-fluid">
    <h3>Legal Department Worker Stats</h3>
    <div class="row">
        <div class="col-md-12">
            <table class="table table-bordered table-dark">
                <thead>
                    <tr>
                        <th>Employee</th>
                        <th>Avg</th>
                        <th>Count</th>
                        <th>Type</th>
                        <th>Time Spent</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var workerStat in workerStats)
                    {
                        <tr>
                            <td>@workerStat.Username</td>
                            <td>@workerStat.AverageSecondsElapsed</td>
                            <td>@workerStat.Count</td>
                            <td>@workerStat.InWorker</td>
                            <td>@workerStat.TimeSpent</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <form class="form" role="form">
                <div class="form-group">
                    <label for="beginDate">Beginning Date:</label>
                    <input type="date" class="form-control" @bind="@startDateString">
                </div>
                <div class="form-group">
                    <label for="endDate">End Date:</label>
                    <input type="date" class="form-control" @bind="@endDateString">
                </div>
                <label for="beginDate">Name To Filter By:</label>
                <select class="form-control" @bind="uniqueUserToSearch">
                    @*Show empty value on form*@
                    <option value=""></option>
                    @*Only show unique users*@
                    @foreach (var uniqueUser in uniqueUsers)
                    {
                        <option value="@uniqueUser">@uniqueUser</option>
                    }
                </select>
                <label for="beginDate">Type To Filter By:</label>
                <select class="form-control" @bind="inWorker">
                    @*Show empty value on form*@
                    <option value=""></option>
                    @*Only show unique workers*@
                    @foreach (var uniqueWorker in uniqueWorkers)
                    {
                        <option value="@uniqueWorker">@uniqueWorker</option>
                    }
                </select>
                <button type="button" class="btn btn-default" @onclick="SearchStats">Search</button>
            </form>
        </div>
        <div class="col-md-6">
            <h3>Legal Department Remaining Totals</h3>
            <table class="table table-bordered table-dark">
                <thead>
                    <tr>
                        <th>In Worker</th>
                        <th>Remaining Total</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var workerStatsRemainingTotal in workerStatsRemainingTotals)
                    {
                        <tr>
                            <td>@workerStatsRemainingTotal.InWorker</td>
                            <td>@workerStatsRemainingTotal.Count</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
}

@code {
    private string currentPage = "LegalPage";

    //For form fields
    private string inWorker;
    private string uniqueUserToSearch;
    public static DateTime currentDate = DateTime.Now;
    string currentDateString = currentDate.ToString("yyyy-MM-dd");
    DateTime startDateString = currentDate;
    DateTime endDateString = currentDate;

    private List<WorkerStats> workerStats { get; set; }
    private List<WorkerStats> workerStatsRemainingTotals { get; set; }
    private List<string> uniqueUsers = new List<string>();
    private List<string> uniqueWorkers = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        //Get todays stats from AllWorkerStats table on page load
        workerStats = await WorkerStatsService.GetStatsAsync(currentPage);
        workerStatsRemainingTotals = await WorkerStatsService.GetRemainingTotalsAsync(currentPage);

        //Get unique usernames from list to populate form with
        uniqueUsers = workerStats.Select(uName => uName.Username).Distinct().ToList();

        //Get unique worker types from list to populate form with
        uniqueWorkers = workerStats.Select(worker => worker.InWorker).Distinct().ToList();
    }

    protected void SearchStats()
    {
        string startDate = startDateString.ToString("yyyy-MM-dd");
        string endDate = endDateString.ToString("yyyy-MM-dd");

        if (String.IsNullOrEmpty(uniqueUserToSearch) && String.IsNullOrEmpty(inWorker))
        {
            navigationManager.NavigateTo($"/searchresults/{startDate}/{endDate}");
        }
        else if (!String.IsNullOrEmpty(uniqueUserToSearch) && String.IsNullOrEmpty(inWorker))
        {
            navigationManager.NavigateTo($"/searchresults/user/{startDate}/{endDate}/{uniqueUserToSearch}");
        }
        else if (String.IsNullOrEmpty(uniqueUserToSearch) && !String.IsNullOrEmpty(inWorker))
        {
            navigationManager.NavigateTo($"/searchresults/worker/{startDate}/{endDate}/{inWorker}");
        }
        else
        {
            navigationManager.NavigateTo($"/searchresults/{startDate}/{endDate}/{uniqueUserToSearch}/{inWorker}");
        }
    }
}
